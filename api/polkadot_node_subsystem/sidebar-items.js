initSidebarItems({"enum":[["Jaeger","Stateful convenience wrapper around [`mick_jaeger`]."],["JaegerError","A description of an error during jaeger initialization."],["LeafStatus","The status of an activated leaf."],["OverseerSignal","Signals sent by an overseer to a subsystem."],["RecoveryError","An error that may happen during Availability Recovery process."],["Span","A wrapper type for a span."],["Stage","A helper to annotate the stage with a numerical value to ease the life of the tooling team creating viable statistical metrics for which stage of the inclusion pipeline drops a significant amount of candidates, statistically speaking."],["SubsystemError","An error type that describes faults that may happen"]],"mod":[["errors","Error types for the subsystem requests."],["messages","Re-export of all messages type, including the wrapper type."]],"struct":[["ActivatedLeaf","Activated leaf."],["ActiveLeavesUpdate","Changes in the set of active leaves: the parachain heads which we care to work on."],["ChainApiError","A description of an error causing the chain API request to be unservable."],["JaegerConfig","Configuration for the jaeger tracing."],["JaegerConfigBuilder","Jaeger configuration builder."],["OverseerConnector","External connector."],["PerLeafSpan","A special “per leaf span”."],["RuntimeApiError","A description of an error causing the runtime API request to be unservable."]],"trait":[["SubsystemContext","Convenience trait specialization."],["SubsystemSender","Sender trait for the `AllMessages` wrapper."]],"type":[["FromOverseer","Specialized message type originating from the overseer."],["SpawnedSubsystem","Spawned subsystem."],["SubsystemInstance","Specialized subsystem instance type of subsystems consuming a particular message type."],["SubsystemResult","A `Result` type that wraps `SubsystemError`."],["SubsystemResult","Ease the use of subsystem errors."]]});