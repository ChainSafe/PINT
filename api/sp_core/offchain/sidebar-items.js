initSidebarItems({"constant":[["STORAGE_PREFIX","Persistent storage prefix used by the Offchain Worker API when creating a DB key."]],"enum":[["HttpError","An error enum returned by some http methods."],["HttpRequestStatus","Status of the HTTP request"],["OffchainOverlayedChange","Change to be applied to the offchain worker db in regards to a key."],["StorageKind","A type of supported crypto."]],"mod":[["storage","In-memory implementation of offchain workers database."],["testing","Utilities for offchain calls testing."]],"struct":[["Capabilities","Execution context extra capabilities."],["Duration","Duration type"],["HttpRequestId","Opaque type for offchain http requests."],["LimitedExternalities","An `*Externalities` implementation with limited capabilities."],["OffchainDbExt","The offchain database extension that will be registered at the Substrate externalities."],["OffchainWorkerExt","The offchain worker extension that will be registered at the Substrate externalities."],["OpaqueMultiaddr","Simple blob to hold a `Multiaddr` without committing to its format."],["OpaqueNetworkState","A blob to hold information about the local nodeâ€™s network state without committing to its format."],["Timestamp","Opaque timestamp type"],["TransactionPoolExt","An externalities extension to submit transactions to the pool."]],"trait":[["DbExternalities","A externalities extension for accessing the Offchain DB."],["Externalities","An extended externalities for offchain workers."],["OffchainStorage","Offchain DB persistent (non-fork-aware) storage."],["TransactionPool","Abstraction over transaction pool."]]});