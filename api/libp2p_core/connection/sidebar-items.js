initSidebarItems({"enum":[["ConnectedPoint","The endpoint roles associated with an established peer-to-peer connection."],["ConnectionError","Errors that can occur in the context of an established `Connection`."],["ConnectionHandlerEvent","Event produced by a handler."],["Endpoint","The endpoint roles associated with a peer-to-peer communication channel."],["Event","Event generated by a [`Connection`]."],["ListenersEvent","Event that can happen on the `ListenersStream`."],["PendingConnectionError","Errors that can occur in the context of a pending `Connection`."],["PendingPoint","The endpoint roles associated with a pending peer-to-peer connection."],["SubstreamEndpoint","Endpoint for a received substream."]],"struct":[["Close","Future that signals the remote that we have closed the connection."],["Connected","Information about a successfully established connection."],["Connection","A multiplexed connection to a peer with an associated `ConnectionHandler`."],["ConnectionCounters","Network connection information."],["ConnectionId","Connection identifier."],["ConnectionLimit","Information about a connection limit."],["ConnectionLimits","The configurable connection limits."],["EstablishedConnection","An established connection in a pool."],["EstablishedConnectionIter","An iterator over established connections in a pool."],["IncomingInfo","Borrowed information about an incoming connection currently being negotiated."],["ListenerId","The ID of a single listener."],["ListenersStream","Implementation of `futures::Stream` that allows listening on multiaddresses."],["PendingConnection","A pending connection in a pool."]],"trait":[["ConnectionHandler","The interface of a connection handler."],["IntoConnectionHandler","Prototype for a `ConnectionHandler`."]],"type":[["PendingInboundConnectionError","Errors that can occur in the context of a pending incoming `Connection`."],["PendingOutboundConnectionError","Errors that can occur in the context of a pending outgoing `Connection`."],["Substream","A successfully opened substream."]]});