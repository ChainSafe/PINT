initSidebarItems({"enum":[["Call","Contains one variant per dispatchable that can be called by an extrinsic."],["Error","Error of the pallet that can be returned in response to dispatches."],["Event","The event emitted by this pallet."]],"fn":[["__type_value_for_default_for_round",""]],"struct":[["DefaultForRound",""],["Pallet","The pallet implementing the on-chain logic."],["_GeneratedPrefixForStorageCurrentPhase",""],["_GeneratedPrefixForStorageDesiredTargets",""],["_GeneratedPrefixForStorageMinimumUntrustedScore",""],["_GeneratedPrefixForStorageQueuedSolution",""],["_GeneratedPrefixForStorageRound",""],["_GeneratedPrefixForStorageSnapshot",""],["_GeneratedPrefixForStorageSnapshotMetadata",""]],"trait":[["Config","Configuration trait of this pallet."]],"type":[["CurrentPhase","Current phase."],["DesiredTargets","Desired number of targets to elect for this round."],["MinimumUntrustedScore","The minimum score that each ‘untrusted’ solution must attain in order to be considered feasible."],["Module","Type alias to `Pallet`, to be used by `construct_runtime`."],["QueuedSolution","Current best solution, signed or unsigned, queued to be returned upon `elect`."],["Round","Internal counter for the number of rounds."],["Snapshot","Snapshot data of the round."],["SnapshotMetadata","The metadata of the [`RoundSnapshot`]"]]});