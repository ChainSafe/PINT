initSidebarItems({"enum":[["Compatibility","`IoHandler` json-rpc protocol compatibility"],["RemoteProcedure","Possible Remote Procedures with Metadata"]],"fn":[["serde_from_str","workaround for https://github.com/serde-rs/json/issues/505 Arbitrary precision confuses serde when deserializing into untagged enums, this is a workaround"]],"mod":[["delegates","Delegate rpc calls"],["middleware","`IoHandler` middlewares"],["types","JSON-RPC types"]],"struct":[["IoHandler","Simplified `IoHandler` with no `Metadata` associated with each request."],["MetaIoHandler","Request handler"]],"trait":[["IoHandlerExtension","A type that can augment `MetaIoHandler`."],["Metadata","Metadata trait"],["RpcMethod","Asynchronous Method with Metadata"],["RpcMethodSimple","Asynchronous Method"],["RpcMethodSync","A synchronous or asynchronous method."],["RpcNotification","Notification with Metadata"],["RpcNotificationSimple","Notification"],["WrapFuture","A future-conversion trait."]],"type":[["BoxFuture","A `Future` trait object."],["FutureOutput","A type representing middleware or RPC call output."],["FutureResponse","A type representing middleware or RPC response before serialization."],["FutureResult","A type representing future string response."],["FutureRpcResult","A type representing an optional `Response` for RPC `Request`."],["Result","A Result type."]]});