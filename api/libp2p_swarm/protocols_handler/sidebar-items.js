initSidebarItems({"enum":[["KeepAlive","How long the connection should be kept alive."],["NodeHandlerWrapperError","Error generated by the `NodeHandlerWrapper`."],["ProtocolsHandlerEvent","Event produced by a handler."],["ProtocolsHandlerUpgrErr","Error that can happen on an outbound substream opening attempt."]],"mod":[["either",""],["multi","A [`ProtocolsHandler`] implementation that combines multiple other `ProtocolsHandler`s indexed by some key."]],"struct":[["DummyProtocolsHandler","Implementation of `ProtocolsHandler` that doesnâ€™t handle anything."],["IntoProtocolsHandlerSelect","Implementation of `IntoProtocolsHandler` that combines two protocols into one."],["MapInEvent","Wrapper around a protocol handler that turns the input event into something else."],["MapOutEvent","Wrapper around a protocol handler that turns the output event into something else."],["NodeHandlerWrapper","Wraps around an implementation of `ProtocolsHandler`, and implements `NodeHandler`."],["NodeHandlerWrapperBuilder","Prototype for a `NodeHandlerWrapper`."],["OneShotHandler","A `ProtocolsHandler` that opens a new substream for each request."],["OneShotHandlerConfig","Configuration parameters for the `OneShotHandler`"],["ProtocolsHandlerSelect","Implementation of `ProtocolsHandler` that combines two protocols into one."],["SendWrapper","Wraps around a type that implements [`OutboundUpgradeSend`], [`InboundUpgradeSend`], or both, and implements `OutboundUpgrade` and/or `InboundUpgrade`."],["SubstreamProtocol","Configuration of inbound or outbound substream protocol(s) for a [`ProtocolsHandler`]."]],"trait":[["InboundUpgradeSend","Implemented automatically on all types that implement `InboundUpgrade` and `Send + 'static`."],["IntoProtocolsHandler","Prototype for a `ProtocolsHandler`."],["OutboundUpgradeSend","Implemented automatically on all types that implement `OutboundUpgrade` and `Send + 'static`."],["ProtocolsHandler","A handler for a set of protocols used on a connection with a remote."],["UpgradeInfoSend","Implemented automatically on all types that implement `UpgradeInfo` and `Send + 'static`."]]});