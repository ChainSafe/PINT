initSidebarItems({"macro":[["error_eof","Fail due to an unexpected end of input."],["error_unexpected","Fail due to an unexpected input token."],["error_unexpected_last","Fail due to an unexpected input token, faulting the last token."],["parse_type","Parse any syntactically valid Rust type. [tt-call]"],["tt_call","Evaluate a tt-call macro and return its output to a given return destination."],["tt_debug","Print arbitrary output values returned by a tt-call macro. This is valuable for debugging. [tt-call]"],["tt_false","Predicate that is always false. [tt-call]"],["tt_if","Evaluate a condition and expand to one or the other of two branches."],["tt_is_comma","Predicate that accepts a single token and determines whether it is a comma. [tt-call]"],["tt_is_ident","Predicate that accepts a single token and determines whether it is an identifier. [tt-call]"],["tt_is_lifetime","Predicate that accepts a single token and determines whether it is a lifetime token. [tt-call]"],["tt_replace","Replace each token that matches a given predicate by a given replacement sequence of tokens. [tt-call]"],["tt_return","Return zero or more output values to the caller macro."],["tt_true","Predicate that is always true. [tt-call]"]]});