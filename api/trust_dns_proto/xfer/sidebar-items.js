initSidebarItems({"enum":[["OneshotDnsResponseReceiver","A Future that wraps a oneshot::Receiver and resolves to the final value"]],"mod":[["dns_handle","`DnsHandle` types perform conversions of the raw DNS messages before sending the messages on the specified streams."],["dns_multiplexer","`DnsMultiplexer` and associated types implement the state machines for sending DNS messages while using the underlying streams."],["dns_request","`DnsRequest` wraps a `Message` and associates a set of `DnsRequestOptions` for specifying different transfer options."],["dns_response","`DnsResponse` wraps a `Message` and any associated connection details"],["retry_dns_handle","`RetryDnsHandle` allows for DnsQueries to be reattempted on failure"]],"struct":[["BufDnsRequestStreamHandle","Used for associating a name_server to a DnsRequestStreamHandle"],["BufDnsStreamHandle","A buffering stream bound to a `SocketAddr`"],["BufStreamHandle","A sender to which serialized DNS Messages can be sent"],["DnsExchange","This is a generic Exchange implemented over multiplexed DNS connection providers."],["DnsExchangeBackground","This background future is responsible for driving all network operations for the DNS protocol."],["DnsExchangeConnect","A wrapper for a future DnsExchange connection."],["DnsExchangeSend","A Future that will resolve to a Response after sending the request"],["OneshotDnsRequest","A OneshotDnsRequest creates a channel for a response to message"],["SerialMessage","A DNS message in serialized form, with either the target address or source address"]],"trait":[["DnsClientStream","A non-multiplexed stream of Serialized DNS messages"],["DnsRequestSender","Types that implement this are capable of sending a serialized DNS message on a stream"]],"type":[["StreamReceiver","Receiver handle for peekable fused SerialMessage channel"]]});