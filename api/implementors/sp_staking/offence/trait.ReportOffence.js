(function() {var implementors = {};
implementors["pallet_offences"] = [{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"pallet_offences/pallet/trait.Config.html\" title=\"trait pallet_offences::pallet::Config\">Config</a>, O:&nbsp;<a class=\"trait\" href=\"sp_staking/offence/trait.Offence.html\" title=\"trait sp_staking::offence::Offence\">Offence</a>&lt;T::<a class=\"type\" href=\"pallet_offences/pallet/trait.Config.html#associatedtype.IdentificationTuple\" title=\"type pallet_offences::pallet::Config::IdentificationTuple\">IdentificationTuple</a>&gt;&gt; <a class=\"trait\" href=\"sp_staking/offence/trait.ReportOffence.html\" title=\"trait sp_staking::offence::ReportOffence\">ReportOffence</a>&lt;&lt;T as <a class=\"trait\" href=\"frame_system/pallet/trait.Config.html\" title=\"trait frame_system::pallet::Config\">Config</a>&gt;::<a class=\"type\" href=\"frame_system/pallet/trait.Config.html#associatedtype.AccountId\" title=\"type frame_system::pallet::Config::AccountId\">AccountId</a>, &lt;T as <a class=\"trait\" href=\"pallet_offences/pallet/trait.Config.html\" title=\"trait pallet_offences::pallet::Config\">Config</a>&gt;::<a class=\"type\" href=\"pallet_offences/pallet/trait.Config.html#associatedtype.IdentificationTuple\" title=\"type pallet_offences::pallet::Config::IdentificationTuple\">IdentificationTuple</a>, O&gt; for <a class=\"struct\" href=\"pallet_offences/pallet/struct.Pallet.html\" title=\"struct pallet_offences::pallet::Pallet\">Pallet</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T::<a class=\"type\" href=\"pallet_offences/pallet/trait.Config.html#associatedtype.IdentificationTuple\" title=\"type pallet_offences::pallet::Config::IdentificationTuple\">IdentificationTuple</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,&nbsp;</span>","synthetic":false,"types":["pallet_offences::pallet::Pallet"]}];
implementors["pallet_staking"] = [{"text":"impl&lt;T, Reporter, Offender, R, O&gt; <a class=\"trait\" href=\"sp_staking/offence/trait.ReportOffence.html\" title=\"trait sp_staking::offence::ReportOffence\">ReportOffence</a>&lt;Reporter, Offender, O&gt; for <a class=\"struct\" href=\"pallet_staking/struct.FilterHistoricalOffences.html\" title=\"struct pallet_staking::FilterHistoricalOffences\">FilterHistoricalOffences</a>&lt;<a class=\"struct\" href=\"pallet_staking/pallet/struct.Pallet.html\" title=\"struct pallet_staking::pallet::Pallet\">Pallet</a>&lt;T&gt;, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"pallet_staking/pallet/trait.Config.html\" title=\"trait pallet_staking::pallet::Config\">Config</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: <a class=\"trait\" href=\"sp_staking/offence/trait.ReportOffence.html\" title=\"trait sp_staking::offence::ReportOffence\">ReportOffence</a>&lt;Reporter, Offender, O&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;O: <a class=\"trait\" href=\"sp_staking/offence/trait.Offence.html\" title=\"trait sp_staking::offence::Offence\">Offence</a>&lt;Offender&gt;,&nbsp;</span>","synthetic":false,"types":["pallet_staking::FilterHistoricalOffences"]}];
implementors["sp_staking"] = [];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()