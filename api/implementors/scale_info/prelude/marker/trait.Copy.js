(function() {var implementors = {};
implementors["scale_info"] = [{"text":"impl <a class=\"trait\" href=\"scale_info/prelude/marker/trait.Copy.html\" title=\"trait scale_info::prelude::marker::Copy\">Copy</a> for <a class=\"enum\" href=\"scale_info/form/enum.MetaForm.html\" title=\"enum scale_info::form::MetaForm\">MetaForm</a>","synthetic":false,"types":["scale_info::form::MetaForm"]},{"text":"impl <a class=\"trait\" href=\"scale_info/prelude/marker/trait.Copy.html\" title=\"trait scale_info::prelude::marker::Copy\">Copy</a> for <a class=\"enum\" href=\"scale_info/form/enum.PortableForm.html\" title=\"enum scale_info::form::PortableForm\">PortableForm</a>","synthetic":false,"types":["scale_info::form::PortableForm"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"scale_info/prelude/marker/trait.Copy.html\" title=\"trait scale_info::prelude::marker::Copy\">Copy</a>&gt; <a class=\"trait\" href=\"scale_info/prelude/marker/trait.Copy.html\" title=\"trait scale_info::prelude::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"scale_info/interner/struct.UntrackedSymbol.html\" title=\"struct scale_info::interner::UntrackedSymbol\">UntrackedSymbol</a>&lt;T&gt;","synthetic":false,"types":["scale_info::interner::UntrackedSymbol"]},{"text":"impl&lt;'a, T:&nbsp;<a class=\"trait\" href=\"scale_info/prelude/marker/trait.Copy.html\" title=\"trait scale_info::prelude::marker::Copy\">Copy</a>&gt; <a class=\"trait\" href=\"scale_info/prelude/marker/trait.Copy.html\" title=\"trait scale_info::prelude::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"scale_info/interner/struct.Symbol.html\" title=\"struct scale_info::interner::Symbol\">Symbol</a>&lt;'a, T&gt;","synthetic":false,"types":["scale_info::interner::Symbol"]},{"text":"impl <a class=\"trait\" href=\"scale_info/prelude/marker/trait.Copy.html\" title=\"trait scale_info::prelude::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"scale_info/struct.MetaType.html\" title=\"struct scale_info::MetaType\">MetaType</a>","synthetic":false,"types":["scale_info::meta_type::MetaType"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()