(function() {var implementors = {};
implementors["bitvec"] = [{"text":"impl&lt;O, V, Rhs&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;Rhs&gt; for <a class=\"struct\" href=\"bitvec/array/struct.BitArray.html\" title=\"struct bitvec::array::BitArray\">BitArray</a>&lt;O, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;O: <a class=\"trait\" href=\"bitvec/order/trait.BitOrder.html\" title=\"trait bitvec::order::BitOrder\">BitOrder</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: <a class=\"trait\" href=\"bitvec/view/trait.BitView.html\" title=\"trait bitvec::view::BitView\">BitView</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"bitvec/slice/struct.BitSlice.html\" title=\"struct bitvec::slice::BitSlice\">BitSlice</a>&lt;O, V::<a class=\"type\" href=\"bitvec/view/trait.BitView.html#associatedtype.Store\" title=\"type bitvec::view::BitView::Store\">Store</a>&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;Rhs&gt;,&nbsp;</span>","synthetic":false,"types":["bitvec::array::BitArray"]},{"text":"impl&lt;O, T, Rhs&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;Rhs&gt; for <a class=\"struct\" href=\"bitvec/slice/struct.BitSlice.html\" title=\"struct bitvec::slice::BitSlice\">BitSlice</a>&lt;O, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;O: <a class=\"trait\" href=\"bitvec/order/trait.BitOrder.html\" title=\"trait bitvec::order::BitOrder\">BitOrder</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"bitvec/store/trait.BitStore.html\" title=\"trait bitvec::store::BitStore\">BitStore</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;Rhs: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.57.0/std/primitive.bool.html\">bool</a>&gt;,&nbsp;</span>","synthetic":false,"types":["bitvec::slice::BitSlice"]},{"text":"impl&lt;O, T, Rhs&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;Rhs&gt; for <a class=\"struct\" href=\"bitvec/boxed/struct.BitBox.html\" title=\"struct bitvec::boxed::BitBox\">BitBox</a>&lt;O, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;O: <a class=\"trait\" href=\"bitvec/order/trait.BitOrder.html\" title=\"trait bitvec::order::BitOrder\">BitOrder</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"bitvec/store/trait.BitStore.html\" title=\"trait bitvec::store::BitStore\">BitStore</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"bitvec/slice/struct.BitSlice.html\" title=\"struct bitvec::slice::BitSlice\">BitSlice</a>&lt;O, T&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;Rhs&gt;,&nbsp;</span>","synthetic":false,"types":["bitvec::boxed::BitBox"]},{"text":"impl&lt;O, T, Rhs&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;Rhs&gt; for <a class=\"struct\" href=\"bitvec/vec/struct.BitVec.html\" title=\"struct bitvec::vec::BitVec\">BitVec</a>&lt;O, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;O: <a class=\"trait\" href=\"bitvec/order/trait.BitOrder.html\" title=\"trait bitvec::order::BitOrder\">BitOrder</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"bitvec/store/trait.BitStore.html\" title=\"trait bitvec::store::BitStore\">BitStore</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;<a class=\"struct\" href=\"bitvec/slice/struct.BitSlice.html\" title=\"struct bitvec::slice::BitSlice\">BitSlice</a>&lt;O, T&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;Rhs&gt;,&nbsp;</span>","synthetic":false,"types":["bitvec::vec::BitVec"]}];
implementors["enumflags2"] = [{"text":"impl&lt;T, B&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;B&gt; for <a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"enumflags2/trait.RawBitFlags.html\" title=\"trait enumflags2::RawBitFlags\">RawBitFlags</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"enumflags2/struct.BitFlags.html\" title=\"struct enumflags2::BitFlags\">BitFlags</a>&lt;T&gt;&gt;,&nbsp;</span>","synthetic":false,"types":["enumflags2::BitFlags"]}];
implementors["ethbloom"] = [{"text":"impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;&amp;'r <a class=\"struct\" href=\"ethbloom/struct.Bloom.html\" title=\"struct ethbloom::Bloom\">Bloom</a>&gt; for <a class=\"struct\" href=\"ethbloom/struct.Bloom.html\" title=\"struct ethbloom::Bloom\">Bloom</a>","synthetic":false,"types":["ethbloom::Bloom"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"ethbloom/struct.Bloom.html\" title=\"struct ethbloom::Bloom\">Bloom</a>&gt; for <a class=\"struct\" href=\"ethbloom/struct.Bloom.html\" title=\"struct ethbloom::Bloom\">Bloom</a>","synthetic":false,"types":["ethbloom::Bloom"]}];
implementors["ethereum_types"] = [{"text":"impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;&amp;'r <a class=\"struct\" href=\"ethereum_types/struct.H32.html\" title=\"struct ethereum_types::H32\">H32</a>&gt; for <a class=\"struct\" href=\"ethereum_types/struct.H32.html\" title=\"struct ethereum_types::H32\">H32</a>","synthetic":false,"types":["ethereum_types::hash::H32"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"ethereum_types/struct.H32.html\" title=\"struct ethereum_types::H32\">H32</a>&gt; for <a class=\"struct\" href=\"ethereum_types/struct.H32.html\" title=\"struct ethereum_types::H32\">H32</a>","synthetic":false,"types":["ethereum_types::hash::H32"]},{"text":"impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;&amp;'r <a class=\"struct\" href=\"ethereum_types/struct.H64.html\" title=\"struct ethereum_types::H64\">H64</a>&gt; for <a class=\"struct\" href=\"ethereum_types/struct.H64.html\" title=\"struct ethereum_types::H64\">H64</a>","synthetic":false,"types":["ethereum_types::hash::H64"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"ethereum_types/struct.H64.html\" title=\"struct ethereum_types::H64\">H64</a>&gt; for <a class=\"struct\" href=\"ethereum_types/struct.H64.html\" title=\"struct ethereum_types::H64\">H64</a>","synthetic":false,"types":["ethereum_types::hash::H64"]},{"text":"impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;&amp;'r <a class=\"struct\" href=\"ethereum_types/struct.H128.html\" title=\"struct ethereum_types::H128\">H128</a>&gt; for <a class=\"struct\" href=\"ethereum_types/struct.H128.html\" title=\"struct ethereum_types::H128\">H128</a>","synthetic":false,"types":["ethereum_types::hash::H128"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"ethereum_types/struct.H128.html\" title=\"struct ethereum_types::H128\">H128</a>&gt; for <a class=\"struct\" href=\"ethereum_types/struct.H128.html\" title=\"struct ethereum_types::H128\">H128</a>","synthetic":false,"types":["ethereum_types::hash::H128"]},{"text":"impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;&amp;'r <a class=\"struct\" href=\"ethereum_types/struct.H264.html\" title=\"struct ethereum_types::H264\">H264</a>&gt; for <a class=\"struct\" href=\"ethereum_types/struct.H264.html\" title=\"struct ethereum_types::H264\">H264</a>","synthetic":false,"types":["ethereum_types::hash::H264"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"ethereum_types/struct.H264.html\" title=\"struct ethereum_types::H264\">H264</a>&gt; for <a class=\"struct\" href=\"ethereum_types/struct.H264.html\" title=\"struct ethereum_types::H264\">H264</a>","synthetic":false,"types":["ethereum_types::hash::H264"]},{"text":"impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;&amp;'r <a class=\"struct\" href=\"ethereum_types/struct.H520.html\" title=\"struct ethereum_types::H520\">H520</a>&gt; for <a class=\"struct\" href=\"ethereum_types/struct.H520.html\" title=\"struct ethereum_types::H520\">H520</a>","synthetic":false,"types":["ethereum_types::hash::H520"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"ethereum_types/struct.H520.html\" title=\"struct ethereum_types::H520\">H520</a>&gt; for <a class=\"struct\" href=\"ethereum_types/struct.H520.html\" title=\"struct ethereum_types::H520\">H520</a>","synthetic":false,"types":["ethereum_types::hash::H520"]}];
implementors["frame_support"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"frame_support/traits/tokens/struct.WithdrawReasons.html\" title=\"struct frame_support::traits::tokens::WithdrawReasons\">WithdrawReasons</a>&gt; for <a class=\"struct\" href=\"frame_support/traits/tokens/struct.WithdrawReasons.html\" title=\"struct frame_support::traits::tokens::WithdrawReasons\">WithdrawReasons</a>","synthetic":false,"types":["frame_support::traits::tokens::misc::WithdrawReasons"]}];
implementors["mio"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"mio/struct.Interest.html\" title=\"struct mio::Interest\">Interest</a>&gt; for <a class=\"struct\" href=\"mio/struct.Interest.html\" title=\"struct mio::Interest\">Interest</a>","synthetic":false,"types":["mio::interest::Interest"]}];
implementors["num_bigint"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"num_bigint/struct.BigInt.html\" title=\"struct num_bigint::BigInt\">BigInt</a>&gt; for <a class=\"struct\" href=\"num_bigint/struct.BigInt.html\" title=\"struct num_bigint::BigInt\">BigInt</a>","synthetic":false,"types":["num_bigint::bigint::BigInt"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;&amp;'a <a class=\"struct\" href=\"num_bigint/struct.BigInt.html\" title=\"struct num_bigint::BigInt\">BigInt</a>&gt; for <a class=\"struct\" href=\"num_bigint/struct.BigInt.html\" title=\"struct num_bigint::BigInt\">BigInt</a>","synthetic":false,"types":["num_bigint::bigint::BigInt"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"num_bigint/struct.BigUint.html\" title=\"struct num_bigint::BigUint\">BigUint</a>&gt; for <a class=\"struct\" href=\"num_bigint/struct.BigUint.html\" title=\"struct num_bigint::BigUint\">BigUint</a>","synthetic":false,"types":["num_bigint::biguint::BigUint"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;&amp;'a <a class=\"struct\" href=\"num_bigint/struct.BigUint.html\" title=\"struct num_bigint::BigUint\">BigUint</a>&gt; for <a class=\"struct\" href=\"num_bigint/struct.BigUint.html\" title=\"struct num_bigint::BigUint\">BigUint</a>","synthetic":false,"types":["num_bigint::biguint::BigUint"]}];
implementors["pallet_contracts_primitives"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"pallet_contracts_primitives/struct.ReturnFlags.html\" title=\"struct pallet_contracts_primitives::ReturnFlags\">ReturnFlags</a>&gt; for <a class=\"struct\" href=\"pallet_contracts_primitives/struct.ReturnFlags.html\" title=\"struct pallet_contracts_primitives::ReturnFlags\">ReturnFlags</a>","synthetic":false,"types":["pallet_contracts_primitives::ReturnFlags"]}];
implementors["primitive_types"] = [{"text":"impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;&amp;'r <a class=\"struct\" href=\"primitive_types/struct.H128.html\" title=\"struct primitive_types::H128\">H128</a>&gt; for <a class=\"struct\" href=\"primitive_types/struct.H128.html\" title=\"struct primitive_types::H128\">H128</a>","synthetic":false,"types":["primitive_types::H128"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"primitive_types/struct.H128.html\" title=\"struct primitive_types::H128\">H128</a>&gt; for <a class=\"struct\" href=\"primitive_types/struct.H128.html\" title=\"struct primitive_types::H128\">H128</a>","synthetic":false,"types":["primitive_types::H128"]},{"text":"impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;&amp;'r <a class=\"struct\" href=\"primitive_types/struct.H160.html\" title=\"struct primitive_types::H160\">H160</a>&gt; for <a class=\"struct\" href=\"primitive_types/struct.H160.html\" title=\"struct primitive_types::H160\">H160</a>","synthetic":false,"types":["primitive_types::H160"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"primitive_types/struct.H160.html\" title=\"struct primitive_types::H160\">H160</a>&gt; for <a class=\"struct\" href=\"primitive_types/struct.H160.html\" title=\"struct primitive_types::H160\">H160</a>","synthetic":false,"types":["primitive_types::H160"]},{"text":"impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;&amp;'r <a class=\"struct\" href=\"primitive_types/struct.H256.html\" title=\"struct primitive_types::H256\">H256</a>&gt; for <a class=\"struct\" href=\"primitive_types/struct.H256.html\" title=\"struct primitive_types::H256\">H256</a>","synthetic":false,"types":["primitive_types::H256"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"primitive_types/struct.H256.html\" title=\"struct primitive_types::H256\">H256</a>&gt; for <a class=\"struct\" href=\"primitive_types/struct.H256.html\" title=\"struct primitive_types::H256\">H256</a>","synthetic":false,"types":["primitive_types::H256"]},{"text":"impl&lt;'r&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;&amp;'r <a class=\"struct\" href=\"primitive_types/struct.H512.html\" title=\"struct primitive_types::H512\">H512</a>&gt; for <a class=\"struct\" href=\"primitive_types/struct.H512.html\" title=\"struct primitive_types::H512\">H512</a>","synthetic":false,"types":["primitive_types::H512"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"primitive_types/struct.H512.html\" title=\"struct primitive_types::H512\">H512</a>&gt; for <a class=\"struct\" href=\"primitive_types/struct.H512.html\" title=\"struct primitive_types::H512\">H512</a>","synthetic":false,"types":["primitive_types::H512"]}];
implementors["region"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"region/struct.Protection.html\" title=\"struct region::Protection\">Protection</a>&gt; for <a class=\"struct\" href=\"region/struct.Protection.html\" title=\"struct region::Protection\">Protection</a>","synthetic":false,"types":["region::protect::Protection"]}];
implementors["rsix"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"rsix/fs/struct.FdFlags.html\" title=\"struct rsix::fs::FdFlags\">FdFlags</a>&gt; for <a class=\"struct\" href=\"rsix/fs/struct.FdFlags.html\" title=\"struct rsix::fs::FdFlags\">FdFlags</a>","synthetic":false,"types":["rsix::imp::linux_raw::fs::types::FdFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"rsix/fs/struct.Access.html\" title=\"struct rsix::fs::Access\">Access</a>&gt; for <a class=\"struct\" href=\"rsix/fs/struct.Access.html\" title=\"struct rsix::fs::Access\">Access</a>","synthetic":false,"types":["rsix::imp::linux_raw::fs::types::Access"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"rsix/fs/struct.AtFlags.html\" title=\"struct rsix::fs::AtFlags\">AtFlags</a>&gt; for <a class=\"struct\" href=\"rsix/fs/struct.AtFlags.html\" title=\"struct rsix::fs::AtFlags\">AtFlags</a>","synthetic":false,"types":["rsix::imp::linux_raw::fs::types::AtFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"rsix/fs/struct.Mode.html\" title=\"struct rsix::fs::Mode\">Mode</a>&gt; for <a class=\"struct\" href=\"rsix/fs/struct.Mode.html\" title=\"struct rsix::fs::Mode\">Mode</a>","synthetic":false,"types":["rsix::imp::linux_raw::fs::types::Mode"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"rsix/fs/struct.OFlags.html\" title=\"struct rsix::fs::OFlags\">OFlags</a>&gt; for <a class=\"struct\" href=\"rsix/fs/struct.OFlags.html\" title=\"struct rsix::fs::OFlags\">OFlags</a>","synthetic":false,"types":["rsix::imp::linux_raw::fs::types::OFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"rsix/fs/struct.ResolveFlags.html\" title=\"struct rsix::fs::ResolveFlags\">ResolveFlags</a>&gt; for <a class=\"struct\" href=\"rsix/fs/struct.ResolveFlags.html\" title=\"struct rsix::fs::ResolveFlags\">ResolveFlags</a>","synthetic":false,"types":["rsix::imp::linux_raw::fs::types::ResolveFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"rsix/fs/struct.RenameFlags.html\" title=\"struct rsix::fs::RenameFlags\">RenameFlags</a>&gt; for <a class=\"struct\" href=\"rsix/fs/struct.RenameFlags.html\" title=\"struct rsix::fs::RenameFlags\">RenameFlags</a>","synthetic":false,"types":["rsix::imp::linux_raw::fs::types::RenameFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"rsix/fs/struct.MemfdFlags.html\" title=\"struct rsix::fs::MemfdFlags\">MemfdFlags</a>&gt; for <a class=\"struct\" href=\"rsix/fs/struct.MemfdFlags.html\" title=\"struct rsix::fs::MemfdFlags\">MemfdFlags</a>","synthetic":false,"types":["rsix::imp::linux_raw::fs::types::MemfdFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"rsix/fs/struct.StatxFlags.html\" title=\"struct rsix::fs::StatxFlags\">StatxFlags</a>&gt; for <a class=\"struct\" href=\"rsix/fs/struct.StatxFlags.html\" title=\"struct rsix::fs::StatxFlags\">StatxFlags</a>","synthetic":false,"types":["rsix::imp::linux_raw::fs::types::StatxFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"rsix/fs/struct.FallocateFlags.html\" title=\"struct rsix::fs::FallocateFlags\">FallocateFlags</a>&gt; for <a class=\"struct\" href=\"rsix/fs/struct.FallocateFlags.html\" title=\"struct rsix::fs::FallocateFlags\">FallocateFlags</a>","synthetic":false,"types":["rsix::imp::linux_raw::fs::types::FallocateFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"rsix/io/epoll/struct.CreateFlags.html\" title=\"struct rsix::io::epoll::CreateFlags\">CreateFlags</a>&gt; for <a class=\"struct\" href=\"rsix/io/epoll/struct.CreateFlags.html\" title=\"struct rsix::io::epoll::CreateFlags\">CreateFlags</a>","synthetic":false,"types":["rsix::imp::linux_raw::io::epoll::CreateFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"rsix/io/epoll/struct.EventFlags.html\" title=\"struct rsix::io::epoll::EventFlags\">EventFlags</a>&gt; for <a class=\"struct\" href=\"rsix/io/epoll/struct.EventFlags.html\" title=\"struct rsix::io::epoll::EventFlags\">EventFlags</a>","synthetic":false,"types":["rsix::imp::linux_raw::io::epoll::EventFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"rsix/io/struct.PollFlags.html\" title=\"struct rsix::io::PollFlags\">PollFlags</a>&gt; for <a class=\"struct\" href=\"rsix/io/struct.PollFlags.html\" title=\"struct rsix::io::PollFlags\">PollFlags</a>","synthetic":false,"types":["rsix::imp::linux_raw::io::poll_fd::PollFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"rsix/io/struct.ReadWriteFlags.html\" title=\"struct rsix::io::ReadWriteFlags\">ReadWriteFlags</a>&gt; for <a class=\"struct\" href=\"rsix/io/struct.ReadWriteFlags.html\" title=\"struct rsix::io::ReadWriteFlags\">ReadWriteFlags</a>","synthetic":false,"types":["rsix::imp::linux_raw::io::types::ReadWriteFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"rsix/io/struct.DupFlags.html\" title=\"struct rsix::io::DupFlags\">DupFlags</a>&gt; for <a class=\"struct\" href=\"rsix/io/struct.DupFlags.html\" title=\"struct rsix::io::DupFlags\">DupFlags</a>","synthetic":false,"types":["rsix::imp::linux_raw::io::types::DupFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"rsix/io/struct.ProtFlags.html\" title=\"struct rsix::io::ProtFlags\">ProtFlags</a>&gt; for <a class=\"struct\" href=\"rsix/io/struct.ProtFlags.html\" title=\"struct rsix::io::ProtFlags\">ProtFlags</a>","synthetic":false,"types":["rsix::imp::linux_raw::io::types::ProtFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"rsix/io/struct.MprotectFlags.html\" title=\"struct rsix::io::MprotectFlags\">MprotectFlags</a>&gt; for <a class=\"struct\" href=\"rsix/io/struct.MprotectFlags.html\" title=\"struct rsix::io::MprotectFlags\">MprotectFlags</a>","synthetic":false,"types":["rsix::imp::linux_raw::io::types::MprotectFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"rsix/io/struct.MapFlags.html\" title=\"struct rsix::io::MapFlags\">MapFlags</a>&gt; for <a class=\"struct\" href=\"rsix/io/struct.MapFlags.html\" title=\"struct rsix::io::MapFlags\">MapFlags</a>","synthetic":false,"types":["rsix::imp::linux_raw::io::types::MapFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"rsix/io/struct.MremapFlags.html\" title=\"struct rsix::io::MremapFlags\">MremapFlags</a>&gt; for <a class=\"struct\" href=\"rsix/io/struct.MremapFlags.html\" title=\"struct rsix::io::MremapFlags\">MremapFlags</a>","synthetic":false,"types":["rsix::imp::linux_raw::io::types::MremapFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"rsix/io/struct.MlockFlags.html\" title=\"struct rsix::io::MlockFlags\">MlockFlags</a>&gt; for <a class=\"struct\" href=\"rsix/io/struct.MlockFlags.html\" title=\"struct rsix::io::MlockFlags\">MlockFlags</a>","synthetic":false,"types":["rsix::imp::linux_raw::io::types::MlockFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"rsix/io/struct.PipeFlags.html\" title=\"struct rsix::io::PipeFlags\">PipeFlags</a>&gt; for <a class=\"struct\" href=\"rsix/io/struct.PipeFlags.html\" title=\"struct rsix::io::PipeFlags\">PipeFlags</a>","synthetic":false,"types":["rsix::imp::linux_raw::io::types::PipeFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"rsix/io/struct.UserfaultfdFlags.html\" title=\"struct rsix::io::UserfaultfdFlags\">UserfaultfdFlags</a>&gt; for <a class=\"struct\" href=\"rsix/io/struct.UserfaultfdFlags.html\" title=\"struct rsix::io::UserfaultfdFlags\">UserfaultfdFlags</a>","synthetic":false,"types":["rsix::imp::linux_raw::io::types::UserfaultfdFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"rsix/io/struct.EventfdFlags.html\" title=\"struct rsix::io::EventfdFlags\">EventfdFlags</a>&gt; for <a class=\"struct\" href=\"rsix/io/struct.EventfdFlags.html\" title=\"struct rsix::io::EventfdFlags\">EventfdFlags</a>","synthetic":false,"types":["rsix::imp::linux_raw::io::types::EventfdFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"rsix/net/struct.SendFlags.html\" title=\"struct rsix::net::SendFlags\">SendFlags</a>&gt; for <a class=\"struct\" href=\"rsix/net/struct.SendFlags.html\" title=\"struct rsix::net::SendFlags\">SendFlags</a>","synthetic":false,"types":["rsix::imp::linux_raw::net::send_recv::SendFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"rsix/net/struct.RecvFlags.html\" title=\"struct rsix::net::RecvFlags\">RecvFlags</a>&gt; for <a class=\"struct\" href=\"rsix/net/struct.RecvFlags.html\" title=\"struct rsix::net::RecvFlags\">RecvFlags</a>","synthetic":false,"types":["rsix::imp::linux_raw::net::send_recv::RecvFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"rsix/net/struct.AcceptFlags.html\" title=\"struct rsix::net::AcceptFlags\">AcceptFlags</a>&gt; for <a class=\"struct\" href=\"rsix/net/struct.AcceptFlags.html\" title=\"struct rsix::net::AcceptFlags\">AcceptFlags</a>","synthetic":false,"types":["rsix::imp::linux_raw::net::types::AcceptFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"rsix/net/struct.SocketFlags.html\" title=\"struct rsix::net::SocketFlags\">SocketFlags</a>&gt; for <a class=\"struct\" href=\"rsix/net/struct.SocketFlags.html\" title=\"struct rsix::net::SocketFlags\">SocketFlags</a>","synthetic":false,"types":["rsix::imp::linux_raw::net::types::SocketFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"rsix/rand/struct.GetRandomFlags.html\" title=\"struct rsix::rand::GetRandomFlags\">GetRandomFlags</a>&gt; for <a class=\"struct\" href=\"rsix/rand/struct.GetRandomFlags.html\" title=\"struct rsix::rand::GetRandomFlags\">GetRandomFlags</a>","synthetic":false,"types":["rsix::imp::linux_raw::rand::types::GetRandomFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"rsix/thread/struct.FutexFlags.html\" title=\"struct rsix::thread::FutexFlags\">FutexFlags</a>&gt; for <a class=\"struct\" href=\"rsix/thread/struct.FutexFlags.html\" title=\"struct rsix::thread::FutexFlags\">FutexFlags</a>","synthetic":false,"types":["rsix::imp::linux_raw::thread::futex::FutexFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"rsix/process/struct.MembarrierQuery.html\" title=\"struct rsix::process::MembarrierQuery\">MembarrierQuery</a>&gt; for <a class=\"struct\" href=\"rsix/process/struct.MembarrierQuery.html\" title=\"struct rsix::process::MembarrierQuery\">MembarrierQuery</a>","synthetic":false,"types":["rsix::process::membarrier::MembarrierQuery"]}];
implementors["sp_core"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"sp_core/offchain/struct.Capabilities.html\" title=\"struct sp_core::offchain::Capabilities\">Capabilities</a>&gt; for <a class=\"struct\" href=\"sp_core/offchain/struct.Capabilities.html\" title=\"struct sp_core::offchain::Capabilities\">Capabilities</a>","synthetic":false,"types":["sp_core::offchain::Capabilities"]}];
implementors["subtle"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"subtle/struct.Choice.html\" title=\"struct subtle::Choice\">Choice</a>&gt; for <a class=\"struct\" href=\"subtle/struct.Choice.html\" title=\"struct subtle::Choice\">Choice</a>","synthetic":false,"types":["subtle::Choice"]}];
implementors["tokio"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"tokio/io/struct.Interest.html\" title=\"struct tokio::io::Interest\">Interest</a>&gt; for <a class=\"struct\" href=\"tokio/io/struct.Interest.html\" title=\"struct tokio::io::Interest\">Interest</a>","synthetic":false,"types":["tokio::io::driver::interest::Interest"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"tokio/io/struct.Ready.html\" title=\"struct tokio::io::Ready\">Ready</a>&gt; for <a class=\"struct\" href=\"tokio/io/struct.Ready.html\" title=\"struct tokio::io::Ready\">Ready</a>","synthetic":false,"types":["tokio::io::driver::ready::Ready"]}];
implementors["tracing_subscriber"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/ops/bit/trait.BitOrAssign.html\" title=\"trait core::ops::bit::BitOrAssign\">BitOrAssign</a>&lt;<a class=\"struct\" href=\"tracing_subscriber/fmt/format/struct.FmtSpan.html\" title=\"struct tracing_subscriber::fmt::format::FmtSpan\">FmtSpan</a>&gt; for <a class=\"struct\" href=\"tracing_subscriber/fmt/format/struct.FmtSpan.html\" title=\"struct tracing_subscriber::fmt::format::FmtSpan\">FmtSpan</a>","synthetic":false,"types":["tracing_subscriber::fmt::format::FmtSpan"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()