initSidebarItems({"enum":[["Call","Contains one variant per dispatchable that can be called by an extrinsic."],["Error","Custom dispatch errors of this pallet."],["Event","The event emitted by this pallet."]],"struct":[["GenesisConfig","Can be used to configure the genesis state of this pallet."],["Pallet","The pallet implementing the on-chain logic."],["_GeneratedPrefixForStorageActiveProposals",""],["_GeneratedPrefixForStorageMembers",""],["_GeneratedPrefixForStoragePendingVotingPeriod",""],["_GeneratedPrefixForStorageProposalCount",""],["_GeneratedPrefixForStorageProposals",""],["_GeneratedPrefixForStorageVotes",""],["_GeneratedPrefixForStorageVotingEligibility",""],["_GeneratedPrefixForStorageVotingPeriod",""]],"trait":[["Config","Configuration trait of this pallet."],["WeightInfo","Trait for the asset-index pallet extrinsic weights."]],"type":[["ActiveProposals","Stores a vector of the hashes of currently active proposals for iteration"],["Members","Maps accountIDs to their member type (council or constituent)"],["Module","Type alias to `Pallet`, to be used by `construct_runtime`."],["Origin",""],["PendingVotingPeriod","Store a duration of the voting period which marked as pending"],["ProposalCount","Increments with each new proposal. Used to produce a unique nonce per proposal instance"],["Proposals","Store a mapping (hash) -> Proposal for all existing proposals."],["Votes","Store a mapping (hash) -> VoteAggregate for all existing proposals."],["VotingEligibility","Stores the block height at which point a member is eligible to cast their vote"],["VotingPeriod","Store a duration (in blocks) of the voting period"]]});