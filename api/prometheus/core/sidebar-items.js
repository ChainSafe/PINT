initSidebarItems({"struct":[["AtomicF64","A atomic float."],["AtomicI64","A atomic signed integer."],["AtomicU64","A atomic unsigned integer."],["Desc","The descriptor used by every Prometheus `Metric`. It is essentially the immutable meta-data of a metric. The normal metric implementations included in this package manage their [`Desc`] under the hood."],["GenericCounter","The underlying implementation for [`Counter`] and [`IntCounter`]."],["GenericGauge","The underlying implementation for [`Gauge`] and [`IntGauge`]."],["GenericLocalCounter","The underlying implementation for [`LocalCounter`] and [`LocalIntCounter`]."],["GenericLocalCounterVec","The underlying implementation for [`LocalCounterVec`] and [`LocalIntCounterVec`]."],["MetricVec","A [`Collector`] to bundle metrics of the same name that differ in their label values. It is usually not used directly but as a building block for implementations of vectors of a given metric type. `GaugeVec` and `CounterVec` are examples already provided in this package."],["Opts","A struct that bundles the options for creating most [`Metric`] types."]],"trait":[["Atomic","An interface for atomics. Used to generically model float metrics and integer metrics, i.e. `Counter` and `IntCounter`."],["Collector","An interface for collecting metrics."],["Describer","An interface for describing the immutable meta-data of a `Metric`."],["Metric","An interface models a single sample value with its meta data being exported to Prometheus."],["MetricVecBuilder","An interface for building a metric vector."],["Number","An interface for numbers. Used to generically model float metrics and integer metrics, i.e. `Counter` and `IntCounter`."]],"type":[["GenericCounterVec","The underlying implementation for [`CounterVec`] and [`IntCounterVec`]."],["GenericGaugeVec","The underlying implementation for [`GaugeVec`] and [`IntGaugeVec`]."]]});