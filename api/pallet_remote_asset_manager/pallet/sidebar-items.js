initSidebarItems({"enum":[["Call","Contains one variant per dispatchable that can be called by an extrinsic."],["Error","Custom dispatch errors of this pallet."],["Event","The event emitted by this pallet."]],"struct":[["GenesisConfig","Can be used to configure the genesis state of this pallet."],["Pallet","The pallet implementing the on-chain logic."],["_GeneratedPrefixForStorageAssetBalance",""],["_GeneratedPrefixForStoragePalletProxyConfig",""],["_GeneratedPrefixForStoragePalletStakingConfig",""],["_GeneratedPrefixForStoragePalletStakingLedger",""],["_GeneratedPrefixForStorageProxies",""],["_GeneratedPrefixForStorageStatemintParaConfig",""],["_GeneratedPrefixForStorageXcmDestWeight",""]],"trait":[["Config","Configuration trait of this pallet."],["WeightInfo","Trait for the asset-index pallet extrinsic weights."]],"type":[["AssetBalance","The ledger of deposited funds and funds about to be withdrawn This mirrors the `deposited` and `withdrawn` amounts from the asset index until Separating this from the `MultiCurrency` balances, which is used to represent any kind of funds (for example assets minted via governance proposal), ensures that this the real inflow of reserve backed assets."],["Module","Type alias to `Pallet`, to be used by `construct_runtime`."],["PalletProxyConfig","The config of `pallet_proxy` in the runtime of the parachain."],["PalletStakingConfig","The config of `pallet_staking` in the runtime of the parachain."],["PalletStakingLedger","The current state of PINT sovereign account bonding in `pallet_staking`."],["Proxies","Denotes the current state of proxies on a parachain for the PINT chainâ€™s account with the delegates being the second key in this map"],["StatemintParaConfig","The config of the statemint parachain."],["XcmDestWeight","The extra weight for cross-chain XCM transfers. xcm_dest_weight: value: Weight"]]});