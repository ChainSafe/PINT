initSidebarItems({"enum":[["Node","Type of node in the trie and essential information thereof."],["NodeHandle","A reference to a trie node which may be stored within another trie node."],["NodeHandlePlan","A `NodeHandlePlan` is a decoding plan for constructing a `NodeHandle` from an encoded trie node. This is used as a substructure of `NodePlan`. See `NodePlan` for details."],["NodePlan","A `NodePlan` is a blueprint for decoding a node from a byte slice. The `NodePlan` is created by parsing an encoded node and can be reused multiple times. This is useful as a `Node` borrows from a byte slice and this struct does not."]],"fn":[["decode_hash","Read a hash from a slice into a Hasher output. Returns None if the slice is the wrong length."]],"struct":[["NibbleSlicePlan","A `NibbleSlicePlan` is a blueprint for decoding a nibble slice from a byte slice. The `NibbleSlicePlan` is created by parsing a byte slice and can be reused multiple times."],["OwnedNode","An `OwnedNode` is an owned type from which a `Node` can be constructed which borrows data from the `OwnedNode`. This is useful for trie iterators."]],"type":[["NodeKey","Partial node key type: offset and owned value of a nibbleslice. Offset is applied on first byte of array (bytes are right aligned)."]]});