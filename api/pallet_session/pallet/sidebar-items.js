initSidebarItems({"enum":[["Call","Contains one variant per dispatchable that can be called by an extrinsic."],["Error","Error for the session pallet."],["Event","The event emitted by this pallet."]],"struct":[["GenesisConfig","Can be used to configure the genesis state of this pallet."],["Pallet","The pallet implementing the on-chain logic."],["_GeneratedPrefixForStorageCurrentIndex",""],["_GeneratedPrefixForStorageDisabledValidators",""],["_GeneratedPrefixForStorageKeyOwner",""],["_GeneratedPrefixForStorageNextKeys",""],["_GeneratedPrefixForStorageQueuedChanged",""],["_GeneratedPrefixForStorageQueuedKeys",""],["_GeneratedPrefixForStorageValidators",""]],"trait":[["Config","Configuration trait of this pallet."]],"type":[["CurrentIndex","Current index of the session."],["DisabledValidators","Indices of disabled validators."],["KeyOwner","The owner of a key. The key is the `KeyTypeId` + the encoded key."],["Module","Type alias to `Pallet`, to be used by `construct_runtime`."],["NextKeys","The next session keys for a validator."],["QueuedChanged","True if the underlying economic identities or weighting behind the validators has changed in the queued validator set."],["QueuedKeys","The queued keys for the next session. When the next session begins, these keys will be used to determine the validatorâ€™s session keys."],["RawEvent","Old name generated by `decl_event`."],["Validators","The current set of validators."]]});