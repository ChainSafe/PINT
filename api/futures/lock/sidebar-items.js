initSidebarItems({"struct":[["BiLock","A type of futures-powered synchronization primitive which is a mutex between two possible owners."],["BiLockAcquire","Future returned by `BiLock::lock` which will resolve when the lock is acquired."],["BiLockGuard","Returned RAII guard from the `poll_lock` method."],["MappedMutexGuard","An RAII guard returned by the `MutexGuard::map` and `MappedMutexGuard::map` methods. When this structure is dropped (falls out of scope), the lock will be unlocked."],["Mutex","A futures-aware mutex."],["MutexGuard","An RAII guard returned by the `lock` and `try_lock` methods. When this structure is dropped (falls out of scope), the lock will be unlocked."],["MutexLockFuture","A future which resolves when the target mutex has been successfully acquired."],["ReuniteError","Error indicating two `BiLock<T>`s were not two halves of a whole, and thus could not be `reunite`d."]]});