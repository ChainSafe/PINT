initSidebarItems({"enum":[["ConnectedPoint","The endpoint roles associated with an established peer-to-peer connection."],["Endpoint","The endpoint roles associated with a peer-to-peer communication channel."],["PublicKey","The public key of a node’s identity keypair."],["UpgradeError","Error that can happen when upgrading a connection or substream to use a protocol."]],"fn":[["address_translation","Perform IP address translation."]],"mod":[["connection",""],["either",""],["identity","A node’s network identity keys."],["multiaddr",""],["muxing","Muxing is the process of splitting a connection into multiple substreams."],["network",""],["peer_record",""],["signed_envelope",""],["transport","Connection-oriented communication channels."],["upgrade","Contains everything related to upgrading a connection or a substream to use a protocol."]],"struct":[["Connected","Information about a successfully established connection."],["Multiaddr","Representation of a Multiaddr."],["Network","Implementation of `Stream` that handles the nodes."],["PeerId","Identifier of a peer of the network."],["PeerRecord","Represents a peer routing record."],["SignedEnvelope","A signed envelope contains an arbitrary byte string payload, a signature of the payload, and the public key that can be used to verify the signature."]],"trait":[["Executor","Implemented on objects that can run a `Future` in the background."],["InboundUpgrade","Possible upgrade on an inbound connection or substream."],["OutboundUpgrade","Possible upgrade on an outbound connection or substream."],["ProtocolName","Types serving as protocol names."],["StreamMuxer","Implemented on objects that can open and manage substreams."],["Transport","A transport provides connection-oriented communication between two peers through ordered streams of data (i.e. connections)."],["UpgradeInfo","Common trait for upgrades that can be applied on inbound substreams, outbound substreams, or both."]],"type":[["Negotiated",""]]});