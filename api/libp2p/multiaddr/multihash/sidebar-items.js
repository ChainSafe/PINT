initSidebarItems({"enum":[["Code","Default (cryptographically secure) Multihash implementation."],["Error","Multihash error."]],"mod":[["derive","This proc macro derives a custom Multihash code table from a list of hashers. It also generates a public type called `Multihash` which corresponds to the specified `alloc_size`."],["typenum","This crate provides type-level numbers evaluated at compile time. It depends only on libcore."]],"struct":[["IdentityDigest","Multihash digest."],["IdentityHasher","Identity hasher with a maximum size."],["MultihashGeneric","A Multihash instance that only supports the basic functionality and no hashing."],["Sha2Digest","Multihash digest."],["Sha2_256","Multihash hasher."],["Sha2_512","Multihash hasher."],["UnknownDigest","Multihash digest."]],"trait":[["Digest","Stack allocated digest trait."],["Hasher","Trait implemented by a hash function implementation."],["MultihashDigest","Trait that implements hashing."],["Size","Size marker trait."],["StatefulHasher","Trait implemented by a hash function implementation."]],"type":[["Identity256","32 byte Identity hasher (constrained to 32 bytes)."],["Multihash","A Multihash with the same allocated size as the Multihashes produces by this derive."],["Result","Multihash result."],["U128",""],["U16",""],["U20",""],["U28",""],["U32",""],["U48",""],["U64",""]]});