initSidebarItems({"enum":[["Error","Errors that can occur while voting in GRANDPA."],["FinalityProofError","Errors occurring when trying to prove finality"]],"fn":[["best_justification","Fetch the justification for the latest block finalized by GRANDPA, if any."],["block_import","Make block importer and link half necessary to tie the background voter to it."],["block_import_with_authority_set_hard_forks","Make block importer and link half necessary to tie the background voter to it. A vector of authority set hard forks can be passed, any authority set change signaled at the given block (either already signalled or in a further block when importing it) will be replaced by a standard change with the given static authorities."],["find_forced_change","Checks the given header for a consensus digest signalling a forced scheduled change and extracts it."],["find_scheduled_change","Checks the given header for a consensus digest signalling a standard scheduled change and extracts it."],["grandpa_peers_set_config","Returns the configuration value to put in [`sc_network::config::NetworkConfiguration::extra_sets`]."],["run_grandpa_observer","Run a GRANDPA observer as a task, the observer will finalize blocks only by listening for and validating GRANDPA commits instead of following the full protocol. Provide configuration and a link to a block import worker that has already been instantiated with `block_import`. NOTE: this is currently not part of the crate’s public API since we don’t consider it stable enough to use on a live network."],["run_grandpa_voter","Run a GRANDPA voter as a task. Provide configuration and a link to a block import worker that has already been instantiated with `block_import`."]],"mod":[["report","Contains a number of data transfer objects for reporting data to the outside world."],["warp_proof","Utilities for generating and verifying GRANDPA warp sync proofs."]],"struct":[["AuthoritySet","A set of authorities."],["AuthoritySetChanges","Tracks historical authority set changes. We store the block numbers for the last block of each authority set, once they have been finalized. These blocks are guaranteed to have a justification unless they were triggered by a forced change."],["BeforeBestBlockBy","A custom voting rule that guarantees that our vote is always behind the best block by at least N blocks, unless the base number is < N blocks behind the best, in which case it votes for the base."],["Config","Configuration for the GRANDPA service"],["FinalityProof","Finality for block B is proved by providing:"],["FinalityProofProvider","Finality proof provider for serving network requests."],["GrandpaBlockImport","A block-import handler for GRANDPA."],["GrandpaJustification","A GRANDPA justification for block finality, it includes a commit message and an ancestry proof including all headers routing all precommit target blocks to the commit target block. Due to the current voting strategy the precommit targets should be the same as the commit target, since honest voters don’t vote past authority set change blocks."],["GrandpaJustificationSender","The sending half of the Grandpa justification channel(s)."],["GrandpaJustificationStream","The receiving half of the Grandpa justification channel."],["GrandpaParams","Parameters used to run Grandpa."],["LinkHalf","Link between the block importer and the background voter."],["ScheduledChange","A scheduled change of authority set."],["SharedAuthoritySet","A shared authority set."],["SharedVoterState","Shared voter state for querying."],["ThreeQuartersOfTheUnfinalizedChain","A custom voting rule that limits votes towards 3/4 of the unfinalized chain, using the given `base` and `best_target` to figure where the 3/4 target should fall."],["VotingRulesBuilder","A builder of a composite voting rule that applies a set of rules to progressively restrict the vote."]],"trait":[["BlockNumberOps","Arithmetic necessary for a block number."],["ClientForGrandpa","A trait that includes all the client functionalities grandpa requires. Ideally this would be a trait alias, we’re not there yet. tracking issue https://github.com/rust-lang/rust/issues/41517"],["GenesisAuthoritySetProvider","Provider for the Grandpa authority set configured on the genesis block."],["GrandpaApi","APIs for integrating the GRANDPA finality gadget into runtimes. This should be implemented on the runtime side."],["VotingRule","A trait for custom voting rules in GRANDPA."]],"type":[["AuthorityId","Identity of a Grandpa authority."],["AuthorityPair","The grandpa crypto scheme defined via the keypair type."],["CatchUp","A catch up message for this chain’s block type."],["Commit","A commit message for this chain’s block type."],["CompactCommit","A compact commit message for this chain’s block type."],["Message","A GRANDPA message for a substrate chain."],["Precommit","A precommit message for this chain’s block type."],["Prevote","A prevote message for this chain’s block type."],["PrimaryPropose","A primary propose message for this chain’s block type."],["SignedMessage","A signed message."],["VotingRuleResult","A future returned by a `VotingRule` to restrict a given vote, if any restriction is necessary."]]});